{
  "design":
  {
    "datastore":
    {
      "independent":
      {
        "turn":
        {
          "hand":"int",
          "time":"int"
        },
        "game":
        {
          "date":"data",
          "person":"??",
          "stats":"??",
          "browser":"String",
          "robot":"??",
          "robot param":"??"
        },
        "person":
        {
          "info":"??",
          "id":"??",
          "stats":
          {
            "basic":"??"
          }
        },

        "global":
        {
          "stats":"??"
        }
      },
      "draft":
      {
        "game":
        {
          "bot":"Key",
          "person":"Key",
          "date":"date",
          "turns":"blob",//big
          "times":"blob"//big
        },
        "person":
        {
          "stat":"any"//always update
        },
        "bot":
        {
          "name":"filename",
          "paramters":"any",
          "lastUpdate":"date",
          "data":"blob"//big
        },
        "personal_bot":
        {
          "bot":"Key",
          "person":"Key",
          "date":"date",
          "data":"blob"//big
        }
      },
      "raw candidate":
      {
        "no-global, incre-game":
        {
          "note1":[
            "server saves data",
            "client retrieves data and not-yet-used-game, update data, upload data",
            "client retrieves data, plays game, upload game",
            "server keeps newest data, backup older data"
          ],
          "pro":
          {
            "simpler design":
            {
              "no global, user difference":"",
              "simpler robot":"",
              "robot is 100% javascript":"",
              "simpler datastore":""
            }
          },
          "con":
          {
            "no data for new user":
            {
              "no game data stored for new user":"",
              "can be fix by adding random anonymous data":""
            },
            "user data cannot interact":
            {
              "more restriction to algorithm":"",
              "cannot exploit more data":""
            },
            "malicious client can mess up data":
            {
              "advanced server can check against it":""
            }
          },
          "data":
          {
            "game":
            {
              "person-bot":"Key",
              "date":"date",
              "turns":"blob",//big
              "times":"blob"//big
            },
            "person":
            {
              "stat":"any"//always update
            },
            "bot":
            {
              "name":"String",
              "paramters":"json",
              "stat":"any"
            },
            "person-bot":
            {
              "bot":"Key",
              "person":"Key",
              "latest":"date",
              "stat":"any"
            },
            "person-bot-data":
            {
              "person-bot":"Key",
              "date":"date",
              "data":"blob"//big
            }
          }

        }
      },
      "candidate":
      {
        "no-global":
        {
          "description":"only has anonymous and registered user",
          "data":
          {
            "robot":
            {
              "param":"json"
            },
            "user":
            {

            },
            "game":
            {
              "robot":"key",
              "user":"key"
            }
          }
        }
      }
    },
    "http":
    {
      //basic
      "get bot":["name,param,person","blob,stat,time"],
      "post upload_game":["game",""],
      //for fun
      "get person":["personkey","stat"],
      "get stat":["","stat"],
      //maintain
      "post update":["token",""]
      //make
    },
    "java":
    {
      "bot_gen":
      {
        "updateg":"param,blob_g blob",//global
        "updatep":"param,blob_p blob",//personal
        "getbot":"param,blob_g,blob_p bot"
      }
    },
    "javascript":
    {
      "bot":
      {
        "init":"param,data bot",
        "update":"bot,turn bot",
        "predict":"bot choice"
      }
    },
    "ui":
    {
      "choice":"button",
      "display":"",
      "stat":"div",
      "bot":
      {
        "reset":"button",
        "change":"input"
      },
      "share":"div",
      "link":"nav"
    },
    "server":
    {
      "draft":
      {
        "client":
        {
          "page":"html",
          "bot":"js",
          "data":"octet-stream"
        }
      }
    }

  },
  "stat":
  {
    "game":
    {
      "longest win":"int",
      "longest lost":"int",
      "win count":"int",
      "tie count":"int",
      "lost count":"int",
      "score":"double"
    },
    "person":
    {
      "longest win":"int",
      "longest lost":"int",
      "win rate":"double",
      "tie rate":"double",
      "lost rate":"double",
      "score":"double"
    }
  },
  "assumptions":
  {
    "no CS specialist plays the game":"",
    "user cannot create custom parameter robot":""
  },
  "tmp":
  {
    "0.4B per turn":""
  }
}
